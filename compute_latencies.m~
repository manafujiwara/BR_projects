function compute_latencies(DIR,subID)

function check_IM_final_eye_a_BP_lb_sepOnOff(DIR)

%% Prepare data
load( [DIR.allSub '/IM_eyeInfo.mat'], 'eye30info'); % plot mean should be done using this data not smoothed one
load( [DIR.allSub '/IM_BPinfo.mat'], 'BPinfo') % plot mean should be done using this data not smoothed one
load( [ DIR.allSub '/subinfo.mat'  ] ,'rejSub', 'accSub', 'subinfo', 'badTri')
load( [ DIR.allSub '/allSub_IM_rej_upsamp_smth_sort_BP_a_slwPhs_lb.mat']) % smoothed data for imagesc, but not for plot
% load([ DIR.allSub '/IM_latency_a_pBP_tp10.mat'], 'latency')

time = linspace(-1, 2, 900);
subID_c = unique( BPinfo( BPinfo(:,6) == 1, 1 ) );
accSub_c = accSub(ismember(accSub, subID_c));
idxaccSub_c = find(ismember(accSub, subID_c));

subID_p = unique( BPinfo( ismember( BPinfo(:,6), [2,3,4,5]), 1 ) );
accSub_p = accSub(ismember(accSub, subID_p));
idxaccSub_p = find(ismember(accSub, subID_p));

ntp = 10;

figure(1), clf, colormap jet
figure(2), clf
iLocPlot = 0;
iLocImage = 0;
maxAmp = [];
jsub = 0;
ksub = 0;
jpBP = 0;
ii = 0;
if 1
    
    % -------------------------------------------------------------------------
    % BPinfo: 1)subID, 2)irun, 3)iblk, 4)iepc, 5)stimLabel,
    % 6)subjestState, 7)BPP (-1~1), 8)label, 9)fBP, 10)fcBP, 11:910)BP(t)
    % -------------------------------------------------------------------------
    % -------------------------------------------------------------------------
    % eyeinfo: 1)subID, 2)irun, 3)iblk, 4)iepc, 5)stimLabel, 6)subjestState
    % 7)BPP (-1~1), 8)label, 9)fBP, 10)fcBP, 11:910)eyeinfo(t)
    % -------------------------------------------------------------------------

        for idata = 1:2 % BP or eye
            
            switch idata
                case 1
                    titleData = 'BP';
                    colLim = [0 1];
                    yLim = [ -.2 1.2];
                case 2
                    titleData = 'OKN';
                    colLim = [0 1.0];
                    yLim = [-.5 2.5];
            end
            
            for istim = 1:2 % non-rivalry or br
                
                switch idata
                    case 1 % data = BP
                        
                        switch istim
                            case 1 % stim = non-br
                                d = blb_BPsmth_non;
                                D = BPinfo( ismember( BPinfo(:,5), [2,3]) , [1,5,6,8,11:end] );
                                D(D(:,2)==3,5:904) = -1 * D(D(:,2)==3,5:904); % flip
                                titleStim = '_non';
                            case 2 % stim = br
                                d = blb_BPsmth_br;
                                titleStim = '_br';
                                D = BPinfo( ismember( BPinfo(:,5), 1 ) , [1,5,6,8,11:end] );  
                                D(D(:,4)==-1,5:904) = -1 * D(D(:,4)==-1,5:904); % flip
                        end
                        
                    case 2 % data = eye
                        switch istim
                            case 1 % stim = non-br
                                d = blb_eye30smth_non;
                                titleStim = '_non';
                                D = eye30info( ismember( eye30info(:,5), [2,3]) , [1,5,6,8,11:end] );
                                D(D(:,2)==3,5:904) = -1 * D(D(:,2)==3,5:904); % flip

                            case 2 % stim = br
                                d = blb_eye30smth_br;
                                titleStim = '_br';
                                D = eye30info( ismember( eye30info(:,5), 1) , [1,5,6,8,11:end] );
                                D(D(:,4)==-1,5:904) = -1 * D(D(:,4)==-1,5:904); % flip
                                yLim = [-.5 1];
                        end
                end
                
                for isubgrp = 1:5 % control, medOn medOff dbsOn dbsOff
                    
                    iLocImage = iLocImage + 1;
                    
                    switch isubgrp
                        case 1
                            iLocPlot = iLocPlot+ 1;
                            dd = d(:,:,idxaccSub_c);
                            lineStyle = '-';
                            lineColor = [.8 0 0];
                            titleSubgrp = '_c';
                            
                        case 2
                            iLocPlot = iLocPlot+ 1;
                            dd = d(:,:,idxaccSub_p);
                            
                            lineStyle = '-';
                            lineColor = [0 .8 0];
                            titleSubgrp = '_mon';
                            
                        case 3
                            lineStyle = '-';
                            lineColor = [0 .2 0];
                            titleSubgrp = '_mof';

                        case 4
                            iLocPlot = iLocPlot+ 1;
                            lineStyle = '-';
                            lineColor = [0 0 1];
                            titleSubgrp = '_don';
                            
                        case 5
                            lineStyle = '-';
                            lineColor = [0 0 .2];
                            titleSubgrp = '_dof';
                            
                    end
                    
                    DD = D(ismember(D(:,1), accSub) & D(:,3) == isubgrp , :);
                    grpSub = unique(DD(:,1));
                    nSub = length(grpSub);
                    

                    zdd = zscore(dd, 0, 2);
                    %%% mean across subjects : for IMAGESC
                    mSub_dd = flipud(mean(zdd,3)); %=> IMAGESC
                    
                    %% PLOT IMAGESC %%%%
%                     figure(1), % IMAGESC ==========================================
%                     titleImage = cat(2, titleData, titleStim, titleSubgrp);
%                     
%                     subplot(4,2,iLocImage)
%                     imagesc(time, [], mSub_dd, colLim)
%                     title(titleImage, 'interpret', 'none')
%                     colorbar
%                     ylabel('pBP')
%                     set(gca, 'YTicklabel', [])
%                     xlabel('Time from stim onset (sec)')
%                     hold on
                    
                    
                    
                    %% Compute latency in each subjct (distribution of all trials)
                    if iLocPlot == 11
                    end
                    
                    
                    h_all = [];
                    p_all = [];
                    for isub = 1:nSub
                        
                        jsub = jsub + 1;
                        
                        %%% mean across trials (within sub)
                        v = DD(DD(:,1)==grpSub(isub),:);
                        v(isnan(v(:,4)),:) = [];
                        nTri = size(v,1);
                        tmp = nanmean(v(:,5:904),1);
                        mTri_DD(isub,:) = [ v(1,1:4), nTri, tmp ];
                        medTri_DD(isub,:) = [ v(1,1:4), nTri, nanmedian(v(:,5:904),1) ];

                        
                        %%%
                        for itp = 1:900
                            [h_all(isub, itp) p_all(isub, itp)] = ttest(v(:,4+itp), 0, 'tail', 'right');
                        end
                        
                        
                        switch idata
                            case 1 % because the data was recoded at 60 Hz
                                %%% latency %%%
                                x = 1:180;
                                y = 5*x;
                                increasing = h_all(isub,y)>0 ;
                                
                                i_all = 0;
                                
                                while 1
                                    i_all = i_all + 1;
                                    if sum( increasing( 60 + i_all : 60 + i_all + ntp -1 ) ) == ntp
                                        break
                                    elseif i_all+ 60  == length(increasing)-ntp-1
                                        i_all = nan;
                                        break
                                    end
                                end
                                
                                if isnan(i_all)
                                    latency(jsub,:) = [ idata, istim, isubgrp, grpSub(isub), nan ];
                                else
                                    latency(jsub,:) = [ idata, istim, isubgrp, grpSub(isub), time( (60+i_all) * 5 ) ];
                                end
                                
                            case 2
                                
                                increasing = h_all(isub,:);
                                i_all = 0;
                                while 1
                                    i_all = i_all + 1;
                                    if sum( increasing( 300 + i_all : 300 + i_all + ntp-1 ) ) == ntp
                                        break
                                    elseif i_all+ 300  == length(increasing)-ntp-1
                                        i_all = nan;
                                        break
                                    end
                                end
                                
                                if isnan(i_all)
                                    latency(jsub,:) = [ idata, istim, isubgrp, grpSub(isub), nan ];
                                else
                                    latency(jsub,:) = [ idata, istim, isubgrp, grpSub(isub), time(300+i_all) ];
                                end
                        end
                        
                    end
                    
                    
                    %%% mean across trials then subject : for shadedError
                    mTrimSub_DD = nanmean(mTri_DD(:,6:905),1);
                    medTrimedSub_DD = nanmedian(medTri_DD(:,6:905),1);
                    medTrimSub_DD = nanmean(medTri_DD(:,6:905),1);

                    semSub_DD = std(mTri_DD(:,6:905),0,1) / sqrt(nSub) ;
                    
                    maxAmp( size(maxAmp,1) + 1 : size(maxAmp,1) + nSub, :) =  [ repmat(idata,nSub,1), repmat(istim,nSub,1) repmat(isubgrp,nSub,1), grpSub, max( mTri_DD(:,306:905) , [], 2 )];
                    
                    for i = 1 : nSub
                        ii = ii + 1;
                        tmaxAmp(ii) = min( find( mTri_DD(i,306:905) == maxAmp( ii, 5 ) ) ) / 300;
                    end
                    
                    mlatency(idata,istim,isubgrp)   = nanmean(latency(latency(:,1) == idata & latency(:,2) == istim & latency(:,3) == isubgrp, 5), 1);
                    medlatency(idata,istim,isubgrp) = nanmedian(latency(latency(:,1) == idata & latency(:,2) == istim & latency(:,3) == isubgrp, 5), 1);
                    
                    mamp(idata,istim,isubgrp)  = nanmean(maxAmp(maxAmp(:,1) == idata & maxAmp(:,2) == istim & maxAmp(:,3) == isubgrp, 5), 1);
                    mtamp(idata,istim,isubgrp) = nanmean(tmaxAmp(maxAmp(:,1) == idata & maxAmp(:,2) == istim & maxAmp(:,3) == isubgrp), 2);
                    
                    mTri_DD = [];
                    tmaxAmp = [];
                    
                    %% Let's plot
                    figure(2), % SHADEDERRORBAR ===================================
                    subplot(4,3,iLocPlot)
                    titlePlot = cat(2, titleData, titleStim);
                    
                    hh = shadedErrorBar(time, mTriSub_DD, semSub_DD, [], 1);
                    hold on
                    set(hh.mainLine, 'LineWidth', 2, 'LineStyle', lineStyle , 'Color', lineColor)
                    set(hh.edge,'Color', lineColor)
                    set(hh.patch,'FAceColor', lineColor)
                    
                    ylim(yLim)
                    
                    hhh = plot( [ medlatency(idata,istim,isubgrp), medlatency(idata,istim,isubgrp)], yLim );
                    set(hhh, 'LineWidth', 2 , 'Color', lineColor, 'LineStyle', lineStyle)
                    
                    plot([-1 2], [0 0], '--k')
                    plot([0 0], [-.5, 2.5], '--k')
                    
                    title(titlePlot, 'interpret', 'none')
                    ylabel('OKNSlwPhs(deg/sec)')
                    xlabel('Time from stim onset (sec)')
%                     
%                     maxAmp_dd = max (mTriSub_DD(:,6:905));
%                     tmaxAmp_dd(iLocImage,:) = [ idata, istim, isubgrp , maxAmp_dd, min( find(mTriSub_DD == maxAmp_dd) ) ];
                end
                
            end
            
        end
        save([ DIR.allSub '/IM_latency_a_pBP_sepOnOff_tp' num2str(ntp) '.mat'], 'latency', 'mamp', 'mtamp')
    end

%%

figure(1),
set(figure(1),'PaperUnits','inches','PaperPosition',[0 0 25 15])
print('-dpng', [DIR.figIMSortBPSlwPhs '/' 'IM_sort_BP_a_slwPhs_lb_mSubImage_eachDataEachStimEachSubgrp_sepOnOff_tp' num2str(ntp) '_allpBP.png'] )

figure(2),
set(figure(2),'PaperUnits','inches','PaperPosition',[0 0 25 15])
print('-dpng', [DIR.figIMSortBPSlwPhs '/' 'IM_sort_BP_a_slwPhs_lb_mTriSubPlot_eachDataEachStimEachSubgrp_sepOnOff_tp' num2str(ntp) '_allpBP.png'] )


%% latency of significance

lgroup(latency(:,1)==1 & latency(:,2)==1 & latency(:,3)==1) = {'BP_nonBR_c'};
lgroup(latency(:,1)==1 & latency(:,2)==1 & latency(:,3)==2) = {'BP_nonBR_p'};
lgroup(latency(:,1)==1 & latency(:,2)==2 & latency(:,3)==1) = {'BP_BR_c'};
lgroup(latency(:,1)==1 & latency(:,2)==2 & latency(:,3)==2) = {'BP_BR_p'};
lgroup(latency(:,1)==2 & latency(:,2)==1 & latency(:,3)==1) = {'OKN_nonBR_c'};
lgroup(latency(:,1)==2 & latency(:,2)==1 & latency(:,3)==2) = {'OKN_nonBR_p'};
lgroup(latency(:,1)==2 & latency(:,2)==2 & latency(:,3)==1) = {'OKN_BR_c'};
lgroup(latency(:,1)==2 & latency(:,2)==2 & latency(:,3)==2) = {'OKN_BR_p'};

%% FOR STATS
avLat(:,1) = num2cell(repmat(accSub,4,1));

avLat(latency(:,1)==1,2) = {'bp'};
avLat(latency(:,1)==2,2) = {'okn'};

avLat(latency(:,2)==1,3) = {'non-br'};
avLat(latency(:,2)==2,3) = {'br'};

avLat(latency(:,3)==1,4) = {'c'};
avLat(latency(:,3)==2,4) = {'p'};

avLat(:,5) = num2cell(latency(:,5));

avLat = cat(1, avLat, avLat);

avLat = sortrows(avLat,1);

fileID = fopen([ DIR.allSub '/avLat_eachSubEachStim_tp' num2str(ntp) '.txt'],'w');

formatSpec = '%d %s %s %s %1.3f\n';

[nrows,ncols] = size(avLat);
for row = 1:nrows
    fprintf(fileID,formatSpec,avLat{row,:});
end

fclose(fileID);



